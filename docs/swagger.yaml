definitions:
  entity.Character:
    properties:
      cost:
        type: integer
      count:
        type: integer
      created_at:
        type: string
      description:
        type: string
      hp:
        type: integer
      id:
        type: integer
      name:
        type: string
      power:
        type: integer
      rarity:
        type: integer
      speed:
        type: integer
      updated_at:
        type: string
    type: object
  entity.Ranking:
    properties:
      id:
        type: integer
      name:
        type: string
      rank:
        type: integer
      score:
        type: integer
    type: object
  schema.CreateUserPayload:
    properties:
      name:
        type: string
    type: object
  schema.DrawGachaPayload:
    properties:
      count:
        type: integer
    type: object
  schema.NameResponse:
    properties:
      name:
        type: string
    type: object
  schema.TokenResponse:
    properties:
      token:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple gacha system api
  title: GachaAPI
  version: "1.0"
paths:
  /character/list:
    get:
      consumes:
      - application/json
      description: ユーザが所持しているキャラクター一覧情報を取得
      parameters:
      - description: 認証トークン
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Character'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: キャラクター関連API
      tags:
      - character
  /gacha/draw:
    post:
      consumes:
      - application/json
      description: ガチャを引いてキャラクターを取得する処理
      parameters:
      - description: 認証トークン
        in: header
        name: x-token
        required: true
        type: string
      - description: ガチャを引く
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.DrawGachaPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Character'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: ガチャ実行API
      tags:
      - gacha
  /ranking/mysql:
    get:
      consumes:
      - application/json
      description: Mysqlからランキングを取得する処理
      parameters:
      - description: 取得個数
        in: query
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Ranking'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Mysqlランキング取得API
      tags:
      - ranking
  /ranking/redis:
    get:
      consumes:
      - application/json
      description: Redisからランキングを取得する処理
      parameters:
      - description: 取得個数
        in: query
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Ranking'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Redisランキング取得API
      tags:
      - ranking
  /user/create:
    post:
      consumes:
      - application/json
      description: ユーザ情報を作成します。\n ユーザの名前情報をリクエストで受け取り、ユーザIDと認証用のトークンを生成しデータベースへ保存します。
      parameters:
      - description: userの新規作成
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.CreateUserPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TokenResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: ユーザ情報作成API
      tags:
      - user
  /user/get:
    get:
      consumes:
      - application/json
      description: ユーザ情報を取得します。\n ユーザの認証と特定の処理はリクエストヘッダのx-tokenを読み取ってデータベースに照会をします。
      parameters:
      - description: 認証トークン
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.NameResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: ユーザ情報取得API
      tags:
      - user
  /user/update:
    put:
      consumes:
      - application/json
      description: ユーザ情報の更新をします。
      parameters:
      - description: 認証トークン
        in: header
        name: x-token
        required: true
        type: string
      - description: userの更新
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.CreateUserPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.NameResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: ユーザ情報更新API
      tags:
      - user
swagger: "2.0"
